{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAVIO\\\\OneDrive\\\\Desktop\\\\Arduino IOT\\\\React Map\\\\map\\\\src\\\\Maps.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Maps = () => {\n  _s();\n  const [map, setMap] = useState(null);\n  useEffect(() => {\n    // Initialize the map\n    const myMap = L.map('map').setView([51.505, -0.09], 13); // Initial coordinates (London, UK)\n    setMap(myMap);\n\n    // Add a tile layer (OpenStreetMap)\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '© OpenStreetMap contributors'\n    }).addTo(myMap);\n\n    // Simulate real-time data (example: random locations)\n    setInterval(() => {\n      const randomLat = 51.5 + Math.random() - 0.5; // Random latitude between 51.0 and 52.0\n      const randomLng = -0.09 + Math.random() - 0.5; // Random longitude between -0.5 and 0.5\n      const marker = L.marker([randomLat, randomLng]).addTo(myMap);\n      marker.bindPopup('Real-time Location').openPopup();\n    }, 2000); // Update every 2 seconds\n\n    return () => {\n      // Clean up resources when component unmounts\n      myMap.remove();\n    };\n  }, []); // Empty dependency array ensures that useEffect runs once after initial render\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      height: '600px',\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n_s(Maps, \"4bJBv0PO2rrDzFRchWWuXyIru0A=\");\n_c = Maps;\nexport default Maps;\nvar _c;\n$RefreshReg$(_c, \"Maps\");","map":{"version":3,"names":["React","useEffect","useState","L","jsxDEV","_jsxDEV","Maps","_s","map","setMap","myMap","setView","tileLayer","attribution","addTo","setInterval","randomLat","Math","random","randomLng","marker","bindPopup","openPopup","remove","id","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SAVIO/OneDrive/Desktop/Arduino IOT/React Map/map/src/Maps.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nconst Maps = () => {\r\n  const [map, setMap] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Initialize the map\r\n    const myMap = L.map('map').setView([51.505, -0.09], 13); // Initial coordinates (London, UK)\r\n    setMap(myMap);\r\n\r\n    // Add a tile layer (OpenStreetMap)\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      attribution: '© OpenStreetMap contributors'\r\n    }).addTo(myMap);\r\n\r\n    // Simulate real-time data (example: random locations)\r\n    setInterval(() => {\r\n      const randomLat = 51.5 + Math.random() - 0.5; // Random latitude between 51.0 and 52.0\r\n      const randomLng = -0.09 + Math.random() - 0.5; // Random longitude between -0.5 and 0.5\r\n      const marker = L.marker([randomLat, randomLng]).addTo(myMap);\r\n      marker.bindPopup('Real-time Location').openPopup();\r\n    }, 2000); // Update every 2 seconds\r\n\r\n    return () => {\r\n      // Clean up resources when component unmounts\r\n      myMap.remove();\r\n    };\r\n  }, []); // Empty dependency array ensures that useEffect runs once after initial render\r\n\r\n  return <div id=\"map\" style={{ height: '600px', width: '100%' }}></div>;\r\n};\r\n\r\nexport default Maps;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,KAAK,GAAGP,CAAC,CAACK,GAAG,CAAC,KAAK,CAAC,CAACG,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACzDF,MAAM,CAACC,KAAK,CAAC;;IAEb;IACAP,CAAC,CAACS,SAAS,CAAC,oDAAoD,EAAE;MAChEC,WAAW,EAAE;IACf,CAAC,CAAC,CAACC,KAAK,CAACJ,KAAK,CAAC;;IAEf;IACAK,WAAW,CAAC,MAAM;MAChB,MAAMC,SAAS,GAAG,IAAI,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;MAC9C,MAAMC,SAAS,GAAG,CAAC,IAAI,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;MAC/C,MAAME,MAAM,GAAGjB,CAAC,CAACiB,MAAM,CAAC,CAACJ,SAAS,EAAEG,SAAS,CAAC,CAAC,CAACL,KAAK,CAACJ,KAAK,CAAC;MAC5DU,MAAM,CAACC,SAAS,CAAC,oBAAoB,CAAC,CAACC,SAAS,CAAC,CAAC;IACpD,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAM;MACX;MACAZ,KAAK,CAACa,MAAM,CAAC,CAAC;IAChB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBAAOlB,OAAA;IAAKmB,EAAE,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACxE,CAAC;AAACxB,EAAA,CA5BID,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AA8BV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}